name: go

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      MYSQL_PORT: 3306
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: todo
      MYSQL_ADDR: localhost:3306
      MYSQL_USER: todo
      MYSQL_PASSWORD: todo
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
          MYSQL_USER: ${{ env.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ env.MYSQL_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Build
        run: make build
      - name: Run unit tests
        run: make test
      - name: Run E2E test
        run: make test-e2e 
      - name: Create DEB package
        run: make package
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sample-todo-deb
          path: |
            build/go-sample-todo_*.deb
          compression-level: 0
  release:
    needs: [build-and-test]
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: sample-todo-deb
      - name: Create release if need
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION="$(cat VERSION)"
          if git show-ref --tags | grep -qwF "refs/tags/${VERSION}"
          then
            echo "${VERSION} exists. Skipped."
            exit 0
          fi
          git tag "${VERSION}"
          git push origin "${VERSION}"
          gh release create "${VERSION}" --generate-notes build/*.deb
